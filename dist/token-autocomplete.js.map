{"version":3,"file":"token-autocomplete.js","sourceRoot":"","sources":["../lib/token-autocomplete.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,IAAK,WAEJ;AAFD,WAAK,WAAW;IACZ,iDAAM,CAAA;IAAE,+CAAK,CAAA;IAAE,iDAAM,CAAA;AACzB,CAAC,EAFI,WAAW,KAAX,WAAW,QAEf;AAmED;IAgDI,2BAAY,OAAgB;QA9C5B,kBAAa,GAAG,WAAW,CAAC;QAC5B,cAAS,GAAG,OAAO,CAAC;QACpB,YAAO,GAAG,KAAK,CAAC;QAChB,WAAM,GAAG,SAAS,CAAC;QACnB,aAAQ,GAAG,WAAW,CAAC;QACvB,aAAQ,GAAG,WAAW,CAAC;QACvB,cAAS,GAAG,YAAY,CAAC;QACzB,YAAO,GAAG,QAAQ,CAAC;QAWnB,aAAQ,GAAY;YAChB,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,aAAa,EAAE,IAAI;YACnB,iCAAiC,EAAE,IAAI;YACvC,eAAe,EAAE,iBAAiB;YAClC,aAAa,EAAE,IAAI;YACnB,kBAAkB,EAAE,IAAI;YACxB,aAAa,EAAE,iBAAiB,CAAC,WAAW,CAAC,eAAe;YAC5D,cAAc,EAAE,EAAE;YAClB,UAAU,EAAE,WAAW,CAAC,KAAK;YAC7B,qBAAqB,EAAE,UAAU,KAAK;gBAClC,4GAA4G;gBAC5G,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;gBACzE,OAAO,IAAI,CAAC,cAAc,GAAG,cAAc,GAAG,QAAQ,GAAG,KAAK,CAAC;YACnE,CAAC;YACD,kBAAkB,EAAE,iBAAiB,CAAC,YAAY,CAAC,eAAe;YAClE,0BAA0B,EAAE,CAAC;YAC7B,kBAAkB,EAAE,IAAI;YACxB,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,KAAK;YACf,eAAe,EAAE,KAAK;YACtB,eAAe,EAAE,IAAI;YACrB,sBAAsB,EAAE,IAAI;YAC5B,YAAY,EAAE,GAAG;SACpB,CAAC;QAIE,IAAI,CAAC,OAAO,yBAAO,IAAI,CAAC,QAAQ,GAAK,OAAO,CAAC,CAAC;QAE9C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,YAAY,WAAW,EAAE,CAAC;YAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC3C,CAAC;aAAM,CAAC;YACJ,IAAI,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpE,IAAI,CAAC,eAAe,EAAE,CAAC;gBACnB,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;YACxE,CAAC;YACD,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;QACrC,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAE7D,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEhD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,CAAC;YAChG,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACrC,CAAC;QAED,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,SAAS,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC3C,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAEzC,oEAAoE;QACpE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;YACrC,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,iBAAiB,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;gBAC/E,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,iBAAiB,CAAC,WAAW,CAAC,uBAAuB,CAAC;YACvF,CAAC;QACL,CAAC;QAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,QAAQ,CAAC;QACjD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACzB,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI,IAAI,EAAE,CAAC;gBACvC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;YACtE,CAAC;YAED,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,MAAM,CAAC;YACxC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,KAAK;;gBAC1C,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC;oBACtB,uCAAuC;oBACvC,IAAM,IAAI,GAAG,MAAA,KAAK,CAAC,aAAa,0CAAE,OAAO,CAAC,YAAY,CAAC,CAAC;oBACxD,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBACpD,CAAC;qBAAM,CAAC;oBACJ,0BAA0B;oBAC1B,IAAM,UAAU,GAAG,MAAA,MAAM,CAAC,aAAa,0CAAE,OAAO,CAAC,MAAM,CAAC,CAAC;oBACzD,IAAM,KAAK,GAAG,MAAA,QAAQ,CAAC,YAAY,EAAE,0CAAE,UAAU,CAAC,CAAC,CAAC,CAAC;oBACrD,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC3D,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAChE,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAGhD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC;YAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC;YACvD,IAAI,CAAC,MAAM,GAAG,IAAI,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAChE,CAAC;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC;YACvD,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC3D,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAE7D,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;QACjC,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;QAEvC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAElB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;YAC5C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACzC,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,IAAyB,CAAC;QAE7D,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;YACpG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QACxC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,qDAAyB,GAAzB;QAAA,iBAqCC;QApCG,IAAI,aAAa,GAAiB,EAAE,CAAC;QACrC,IAAI,kBAAkB,GAAsB,EAAE,CAAC;QAE/C,IAAI,OAAO,GAAkC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAEvF,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;YAClB,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;gBACtB,IAAI,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC;oBAClC,aAAa,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;gBAC7E,CAAC;gBACD,kBAAkB,CAAC,IAAI,CAAC;oBACpB,EAAE,EAAE,IAAI;oBACR,KAAK,EAAE,MAAM,CAAC,KAAK;oBACnB,UAAU,EAAE,MAAM,CAAC,IAAI;oBACvB,IAAI,EAAE,IAAI;oBACV,qBAAqB,EAAE,MAAM,CAAC,OAAO,CAAC,WAAW,IAAI,IAAI;oBACzD,eAAe,EAAE,IAAI;oBACrB,QAAQ,EAAE,MAAM,CAAC,QAAQ,IAAI,KAAK;iBACrC,CAAC,CAAC;YACP,CAAC;YACD,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YACrD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;gBACtD,IAAI,eAAe,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBAC5C,aAAa,CAAC,IAAI,CAAC;oBACf,KAAK,EAAE,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,eAAe,CAAC,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI;iBAC7F,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QAED,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;QAC/C,CAAC;IACL,CAAC;IAED;;;;;;;;;;OAUG;IACH,+BAAG,GAAH,UAAI,KAAyC,EAAE,MAAuB;QAAlE,sBAAA,EAAA,YAAyC;QAAE,uBAAA,EAAA,cAAuB;QAClE,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;YACjD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,MAAM,GAAkB,EAAE,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAA,MAAM;YACvD,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,KAAK,EAAE,EAAE,CAAC;gBAC9D,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACtC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;IAGD;;;;;;;OAOG;IACH,oCAAQ,GAAR,UAAS,KAA2B,EAAE,MAAuB;QAA7D,iBAUC;QAVqC,uBAAA,EAAA,cAAuB;QACzD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YACvB,KAAK,CAAC,OAAO,CAAC,UAAA,KAAK;gBACf,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;oBAC5B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBACtE,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtE,CAAC;IACL,CAAC;IAED;;OAEG;IACH,2CAAe,GAAf;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,IAAI,EAAE,CAAC;IAC5C,CAAC;IAED,2CAAe,GAAf,UAAgB,KAAa,EAAE,MAAe;QAC1C,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;QAE7B,IAAI,MAAM,EAAE,CAAC;YACT,OAAO;QACX,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,EAAE;YAC1D,MAAM,EAAE;gBACJ,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,CAAC;IACR,CAAC;IAED,2CAAe,GAAf,UAAgB,UAAkB,EAAE,SAAiB,EAAE,SAAwB,EAAE,WAA4B;QAA5B,4BAAA,EAAA,mBAA4B;QACzG,UAAU,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;QAC/B,SAAS,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAClE,IAAI,WAAW,EAAE,CAAC;YACd,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAC/C,CAAC;QACD,IAAI,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,gCAAgC,CAAC,CAAC;QAC3F,IAAI,kBAAkB,EAAE,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QACtD,CAAC;QACD,IAAI,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,eAAe,EAAE,CAAC;YAClB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QACnD,CAAC;QACD,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,GAAG,SAAS,CAAC;QACxB,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC;QAC1B,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC;QAChC,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC;QAClC,IAAI,SAAS,IAAI,IAAI,EAAE,CAAC;YACpB,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC;QACpC,CAAC;QACD,IAAI,WAAW,EAAE,CAAC;YACd,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC1D,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAED,+CAAmB,GAAnB,UAAoB,WAAmB;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxD,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,MAAM,CAAC,KAAK,KAAK,WAAW,EAAE,CAAC;gBAC/B,OAAO,MAAM,CAAC;YAClB,CAAC;QACL,CAAC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gDAAoB,GAApB;QACI,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAClE,IAAI,WAAW,EAAE,CAAC;YACd,WAAW,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACjD,CAAC;aAAM,CAAC;YACJ,IAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACpD,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;YACrB,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;YACtB,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC3B,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACtC,CAAC;IACL,CAAC;IAED,8CAAkB,GAAlB,UAAmB,eAAmC;QAClD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,GAAG,eAAe,CAAC;IACzD,CAAC;IAED,iCAAK,GAAL,UAAM,KAAc;QAChB,IAAI,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAChD,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,GAAG,GAAG;gBACP,kEAAkE;YACtE,CAAC,CAAA;QACL,CAAC;IACL,CAAC;IA09BM,8BAAY,GAAnB,UAAoB,IAA+B;;QAC/C,OAAO,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,mCAAI,EAAE,CAAC;IAClD,CAAC;IAEM,wCAAsB,GAA7B,UAA8B,UAAgB;QAC1C,IAAI,UAAU,YAAY,WAAW,EAAE,CAAC;YACpC,OAAO,UAAU,CAAC,OAAO,CAAC,QAAQ,KAAK,MAAM,CAAC;QAClD,CAAC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;;IAj+BM,6BAAW;YAQd,iBAAY,MAAyB;gBACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;gBAE7C,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;oBAC/B,IAAI,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;oBACjD,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;oBAC9D,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBAC5C,CAAC;YACL,CAAC;YAED,mCAAiB,GAAjB;gBACI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,EAAE,CAAC;YAC3C,CAAC;YAED,oCAAkB,GAAlB;gBAAA,iBAsDC;;gBArDG,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;oBAC1B,OAAO;gBACX,CAAC;gBAED,IAAI,WAAW,GAAG,KAAK,CAAC;gBACxB,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;oBAClD,WAAW,GAAG,IAAI,CAAC;gBACvB,CAAC,CAAC,CAAA;gBACF,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,UAAA,KAAK;oBACrD,WAAW,GAAG,KAAK,CAAC;oBAEpB,oGAAoG;oBACpG,IAAI,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;oBAC7B,IAAI,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;wBACtD,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,4CAA4C,CAAC,CAAC,CAAC;oBAClH,CAAC;gBACL,CAAC,CAAC,CAAA;gBAEF,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAA,KAAK;oBAC9C,IAAI,WAAW;wBAAE,OAAO;oBAExB,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,eAAe,IAAI,MAAM,CAAC,YAAY,CAAC,uBAAuB,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC;wBAC9M,KAAK,CAAC,cAAc,EAAE,CAAC;wBAEvB,IAAI,qBAAqB,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,4CAA4C,CAAC,CAAC;wBAExH,IAAI,MAAM,CAAC,OAAO,CAAC,eAAe,IAAI,qBAAqB,IAAI,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,YAAY,CAAC,uBAAuB,EAAE,EAAE,CAAC;4BAClJ,qBAAqB,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC;wBACvE,CAAC;wBAED,KAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;oBAC5C,CAAC;yBAAM,IAAI,MAAM,CAAC,eAAe,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC;wBAC9E,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,KAAI,CAAC,eAAe,EAAE,CAAC;oBAC3B,CAAC;oBACD,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBACxH,KAAK,CAAC,cAAc,EAAE,CAAC;oBAC3B,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC,CAAC;gBAExE,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;oBAC/B,MAAA,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,mCAAmC,CAAC,0CAAE,gBAAgB,CAAC,OAAO,EAAE;wBAC3F,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;wBACjB,KAAI,CAAC,iBAAiB,EAAE,CAAC;wBACzB,KAAI,CAAC,cAAc,EAAE,CAAC;wBAEtB,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;oBACnE,CAAC,CAAC,CAAC;gBACP,CAAC;YACL,CAAC;YAED,6BAAW,GAAX,UAAY,qBAA0B;gBAClC,IAAI,qBAAqB,KAAK,IAAI,EAAE,CAAC;oBACjC,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,IAAI,qBAAqB,CAAC,SAAS,CAAC,QAAQ,CAAC,sCAAsC,CAAC,EAAE,CAAC;wBACnF,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;oBACtE,CAAC;yBAAM,CAAC;wBACJ,IAAI,qBAAqB,CAAC,OAAO,CAAC,YAAY,KAAK,OAAO,EAAE,CAAC;4BACzD,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,OAAO,CAAC,KAAK,EAAE,qBAAqB,CAAC,OAAO,CAAC,SAAS,EAAE,qBAAqB,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBAC3I,CAAC;wBACD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,+BAA+B,CAAC,qBAAqB,CAAC,CAAC;oBACpF,CAAC;gBACL,CAAC;qBAAM,CAAC;oBACJ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC;gBAC3D,CAAC;gBACD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;gBAC5C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;YAC/C,CAAC;YAED;;eAEG;YACH,gCAAc,GAAd;gBACI,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;oBACzE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,8BAA8B,CAAC,CAAC;gBACpE,CAAC;qBAAM,CAAC;oBACJ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;gBACjE,CAAC;YACL,CAAC;YAED;;;;eAIG;YACH,oCAAkB,GAAlB,UAAmB,KAAa;gBAC5B,IAAI,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;oBACxD,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;oBAClC,OAAO;gBACX,CAAC;gBACD,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,YAAY,EAAE,CAAC;oBACnJ,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;gBAC5D,CAAC;qBAAM,CAAC;oBACJ,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC7B,CAAC;YACL,CAAC;YAED;;;;;;;eAOG;YACH,0BAAQ,GAAR,UAAS,UAAyB,EAAE,SAAwB,EAAE,SAAwB,EAAE,MAAuB;gBAA/G,iBAmCC;;gBAnCuF,uBAAA,EAAA,cAAuB;gBAC3G,IAAI,UAAU,KAAK,IAAI,IAAI,SAAS,KAAK,IAAI,IAAI,UAAU,KAAK,YAAY,EAAE,CAAC;oBAC3E,OAAO;gBACX,CAAC;gBAED,UAAU,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;gBAC/B,SAAS,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;gBAE7B,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBAE9D,IAAI,UAAU,GAAG;oBACb,KAAK,EAAE,UAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,IAAI,EAAE,SAAS;iBAClB,CAAC;gBAEF,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBAExC,MAAA,OAAO,CAAC,aAAa,CAAC,mCAAmC,CAAC,0CAAE,gBAAgB,CAAC,OAAO,EAAE;oBAClF,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACjE,IAAI,CAAC,cAAc,EAAE,CAAC;gBAEtB,IAAI,CAAC,MAAM,EAAE,CAAC;oBACV,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,gBAAgB,EAAE;wBAC3D,MAAM,EAAE;4BACJ,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;4BACzB,KAAK,EAAE,UAAU;yBACpB;qBACJ,CAAC,CAAC,CAAC;gBACR,CAAC;gBAED,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YAC/C,CAAC;YAED;;eAEG;YACH,uBAAK,GAAL,UAAM,MAAuB;gBAA7B,iBAIC;gBAJK,uBAAA,EAAA,cAAuB;gBACzB,IAAI,MAAM,GAA4B,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,CAAC;gBAExG,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,EAA/B,CAA+B,CAAC,CAAC;YAC7D,CAAC;YAED;;eAEG;YACH,iCAAe,GAAf;gBACI,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,CAAC;gBAC/E,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAgB,CAAC;gBACrD,IAAI,KAAK,EAAE,CAAC;oBACR,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC;YACL,CAAC;YAED;;;;;eAKG;YACH,6BAAW,GAAX,UAAY,KAAkB,EAAE,MAAuB;;gBAAvB,uBAAA,EAAA,cAAuB;gBACnD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAEvC,IAAI,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;gBACnC,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,oBAAoB,GAAG,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC;gBACnI,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,aAAa,0CAAE,WAAW,CAAC,YAAY,CAAC,CAAC;gBAEvD,IAAI,UAAU,GAAG;oBACb,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK;oBAC1B,IAAI,EAAE,SAAS;oBACf,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI;iBACnC,CAAC;gBAEF,IAAI,CAAC,MAAM,EAAE,CAAC;oBACV,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,gBAAgB,EAAE;wBAC3D,MAAM,EAAE;4BACJ,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;4BACzB,OAAO,EAAE,UAAU;yBACtB;qBACJ,CAAC,CAAC,CAAC;gBACR,CAAC;gBAED,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;oBACjC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;gBACvC,CAAC;gBAED,IAAI,CAAC,cAAc,EAAE,CAAC;gBAEtB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;YACxD,CAAC;YAED,qCAAmB,GAAnB,UAAoB,SAAwB;gBACxC,IAAI,SAAS,KAAK,IAAI,EAAE,CAAC;oBACrB,OAAO;gBACX,CAAC;gBACD,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,uCAAuC,GAAG,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,CAAgB,CAAC;gBACzJ,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC;YACL,CAAC;YA+BL,cAAC;QAAD,CAAC,AA9QoB;;QAiPV,kBAAe,GAAkB,UAAU,KAAY;YAC1D,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACjC,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACnC,CAAC;YACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;YAE9B,IAAI,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YACjD,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;YAC9D,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAE9B,OAAO,IAAI,CAAC;QAChB,CAAC;QAEM,0BAAuB,GAAkB,UAAU,KAAY;YAClE,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACjC,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACnC,CAAC;YACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;YAE9B,OAAO,IAAI,CAAC;QAChB,CAAC;WA7Qa,CA8QjB;IAEM,8BAAY;QAWf,iBAAY,MAAyB;YACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAE9B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;YAChE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;YACnC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACxB,IAAI,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBACjD,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;gBAC9D,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAC5C,CAAC;YACD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACrD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;YACpE,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,QAAQ,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAClD,CAAC;QAED;;;;;WAKG;QACH,uBAAK,GAAL,UAAM,MAAe,EAAE,iBAAiC;;YAAjC,kCAAA,EAAA,wBAAiC;YACpD,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACxB,OAAO;YACX,CAAC;YACD,IAAI,EAAE,GAAG,IAAI,CAAC;YACd,IAAI,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC;YAChD,IAAI,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,oBAAoB,GAAG,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,CAAgB,CAAC;YAEhJ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,8BAA8B,CAAC,CAAC;YAEhE,IAAM,aAAa,GAAG,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,CAAC,KAAK,CAAC;YAClD,IAAM,YAAY,GAAG,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,CAAC,IAAI,CAAC;YAChD,IAAM,YAAY,GAAG,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,CAAC,IAAI,CAAC;YAChD,IAAI,iBAAiB,EAAE,CAAC;gBACpB,EAAE,CAAC,aAAa,GAAG,aAAa,CAAC;gBACjC,EAAE,CAAC,YAAY,GAAG,YAAY,CAAC;gBAC/B,EAAE,CAAC,YAAY,GAAG,YAAY,CAAC;gBAC/B,IAAI,YAAY,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;oBACxD,EAAE,CAAC,aAAa,GAAG,SAAS,CAAC;oBAC7B,EAAE,CAAC,YAAY,GAAG,SAAS,CAAC;gBAChC,CAAC;gBACD,IAAI,EAAE,CAAC,YAAY,IAAI,EAAE,CAAC,YAAY,KAAK,EAAE,EAAE,CAAC;oBAC5C,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC;gBAC9D,CAAC;YACL,CAAC;iBAAM,CAAC;gBACJ,8FAA8F;gBAC9F,8EAA8E;gBAC9E,OAAO,EAAE,CAAC,aAAa,CAAC;gBACxB,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,IAAI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,IAAI,IAAI,EAAE,CAAC;oBAC5C,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC;gBAChF,CAAC;YACL,CAAC;YACD,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,aAAa,0CAAE,WAAW,CAAC,YAAY,CAAC,CAAC;YACvD,EAAE,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;YACjC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,EAAE,CAAC;YACrC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,MAAM,CAAC;YAE7C,IAAI,CAAC,MAAM,EAAE,CAAC;gBACV,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,gBAAgB,EAAE;oBAC3D,MAAM,EAAE;wBACJ,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;wBACzB,OAAO,EAAE;4BACL,KAAK,EAAE,aAAa;4BACpB,IAAI,EAAE,YAAY;4BAClB,IAAI,EAAE,YAAY;yBACrB;qBACJ;iBACJ,CAAC,CAAC,CAAC;YACR,CAAC;QACL,CAAC;QAED;;;;WAIG;QACH,oCAAkB,GAAlB,UAAmB,KAAa;YAC5B,IAAI,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;gBACxD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;gBACzC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;gBAC5C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;gBAC3C,OAAO;YACX,CAAC;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,YAAY,EAAE,CAAC;gBACnJ,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;gBACxD,OAAO;YACX,CAAC;YACD,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC5B,CAAC;QAED,mCAAiB,GAAjB;YACI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC;QAED;;WAEG;QACH,gCAAc,GAAd;YACI,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACzE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,8BAA8B,CAAC,CAAC;YACpE,CAAC;iBAAM,CAAC;gBACJ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YACjE,CAAC;QACL,CAAC;QAED,0BAAQ,GAAR,UAAS,UAAyB,EAAE,SAAwB,EAAE,SAAwB,EAAE,MAAe;YACnG,IAAI,UAAU,KAAK,IAAI,IAAI,SAAS,KAAK,IAAI,IAAI,UAAU,KAAK,YAAY,EAAE,CAAC;gBAC3E,OAAO;YACX,CAAC;YAED,UAAU,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;YAC/B,SAAS,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;YAE7B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,OAAO,CAAC;YAChD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YAC7B,IAAI,SAAS,KAAK,EAAE,EAAE,CAAC;gBACnB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YACjE,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YAE9D,IAAI,CAAC,MAAM,EAAE,CAAC;gBACV,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,gBAAgB,EAAE;oBAC3D,MAAM,EAAE;wBACJ,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;wBACzB,KAAK,EAAE;4BACH,KAAK,EAAE,UAAU;4BACjB,IAAI,EAAE,SAAS;4BACf,IAAI,EAAE,SAAS;yBAClB;qBACJ;iBACJ,CAAC,CAAC,CAAC;YACR,CAAC;QACL,CAAC;QAED,oCAAkB,GAAlB;YAAA,iBAmGC;;YAlGG,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBAC1B,OAAO;YACX,CAAC;YAED,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,UAAA,KAAK;gBACrD,oGAAoG;gBACpG,IAAI,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;gBAC7B,IAAI,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;oBACtD,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,4CAA4C,CAAC,CAAC,CAAC;gBAClH,CAAC;YACL,CAAC,CAAC,CAAA;YAEF,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAA,KAAK;gBAC9C,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,eAAe,IAAI,MAAM,CAAC,YAAY,CAAC,uBAAuB,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC;oBAC9M,KAAK,CAAC,cAAc,EAAE,CAAC;oBAEvB,IAAI,qBAAqB,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,4CAA4C,CAAC,CAAC;oBAExH,IAAI,MAAM,CAAC,OAAO,CAAC,eAAe,IAAI,qBAAqB,IAAI,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,YAAY,CAAC,uBAAuB,EAAE,EAAE,CAAC;wBAClJ,qBAAqB,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC;oBACvE,CAAC;oBAED,KAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;gBAC5C,CAAC;gBACD,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACxH,KAAK,CAAC,cAAc,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;gBACpC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,KAAK;oBAC5C,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;wBAC7H,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,MAAM,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC3F,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;YAED,IAAM,UAAU,GAAG;gBACf,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,uBAAuB,EAAE,IAAI,MAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;oBAC1F,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;oBACtC,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;gBAC1C,CAAC;gBACD,wCAAwC;gBACxC,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;gBACxC,IAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;gBACrC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,eAAe,EAAE,CAAC;gBAC7B,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC3C,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACtB,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC3B,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAC7B,CAAC,CAAC;YAEF,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAM,OAAA,UAAU,EAAE,EAAZ,CAAY,CAAC,CAAC;YAE/D,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAC,KAAiB;gBAC5D,IAAI,KAAK,CAAC,aAAa,KAAK,KAAI,CAAC,YAAY,EAAE,CAAC;oBAC5C,wGAAwG;oBACxG,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC;gBACvD,CAAC;gBACD,kGAAkG;gBAClG,6HAA6H;gBAC7H,yHAAyH;gBACzH,4JAA4J;gBAC5J,UAAU,CAAC;oBACP,IAAI,MAAM,CAAC,YAAY,CAAC,oBAAoB,EAAE,EAAE,CAAC;wBAC7C,OAAO;oBACX,CAAC;oBACD,IAAM,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC;oBAC5C,IAAI,KAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,KAAK,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC;wBAChE,OAAO;oBACX,CAAC;oBACD,IAAI,KAAK,IAAI,EAAE,EAAE,CAAC;wBACd,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;wBAC/B,OAAO;oBACX,CAAC;oBACD,IAAI,KAAI,CAAC,aAAa,EAAE,CAAC;wBACrB,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,YAAY,EAAE,KAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;oBAClF,CAAC;gBACL,CAAC,EAAE,CAAC,CAAC,CAAC;YAEV,CAAC,CAAC,CAAC;YACH,MAAA,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,mCAAmC,CAAC,0CAAE,gBAAgB,CAAC,OAAO,EAAE;gBAC3F,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE;gBACxC,IAAI,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,eAAe,KAAK,MAAM,EAAE,CAAC;oBACvD,wFAAwF;oBACxF,OAAO,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;oBACjD,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;gBAC7B,CAAC;qBAAM,CAAC;oBACJ,6EAA6E;oBAC7E,UAAU,EAAE,CAAC;gBACjB,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,6BAAW,GAAX,UAAY,qBAA0B;YAClC,IAAI,qBAAqB,KAAK,IAAI,EAAE,CAAC;gBACjC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,OAAO,CAAC,KAAK,EAAE,qBAAqB,CAAC,OAAO,CAAC,SAAS,EAAE,qBAAqB,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3I,CAAC;iBAAM,CAAC;gBACJ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC;YAC3D,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;YAC5C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAC/C,CAAC;QACL,cAAC;IAAD,CAAC,AAzQqB,GAAH,CAyQlB;IAEM,mCAAiB;QAAiB,2BAA6B;QAA3C;;QAc3B,CAAC;QAbG;;;;;WAKG;QACH,oCAAkB,GAAlB,UAAmB,KAAa;YAC5B,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,EAAE;gBAC1D,MAAM,EAAE;oBACJ,KAAK,EAAE,KAAK;iBACf;aACJ,CAAC,CAAC,CAAC;QACR,CAAC;QACL,cAAC;IAAD,CAAC,AAd0B,CAAc,iBAAiB,CAAC,WAAW,EAA9C,CAcvB;IAEM,8BAAY;YAUf,iBAAY,MAAyB;gBACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC;gBAElD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAChD,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,cAAc,CAAC;gBACzD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;gBAEjE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACjD,CAAC;YAED,oCAAkB,GAAlB;gBAAA,iBAgGC;gBA/FG,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;oBAC/B,OAAO;gBACX,CAAC;gBACD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,KAAK;oBACjD,IAAI,KAAK,CAAC,GAAG,IAAI,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;wBACnC,KAAI,CAAC,eAAe,EAAE,CAAC;wBACvB,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;wBAC7B,OAAO;oBACX,CAAC;oBACD,IAAI,KAAK,CAAC,GAAG,IAAI,KAAI,CAAC,MAAM,CAAC,MAAM,IAAI,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC5E,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,IAAI,qBAAqB,GAAG,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,4CAA4C,CAAC,CAAC;wBACzG,IAAI,qBAAqB,IAAI,IAAI,EAAE,CAAC;4BAChC,4CAA4C;4BAC5C,IAAI,gBAAgB,GAAG,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC;4BAClD,OAAO,gBAAgB,IAAI,IAAI,IAAI,iBAAiB,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,EAAE,CAAC;gCAC5F,gBAAgB,GAAG,gBAAgB,CAAC,eAAe,CAAC;4BACxD,CAAC;4BACD,IAAI,gBAAgB,IAAI,IAAI,EAAE,CAAC;gCAC3B,KAAI,CAAC,mBAAmB,CAAC,gBAA2B,CAAC,CAAC;gCACtD,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC;4BAC/D,CAAC;4BACD,OAAO;wBACX,CAAC;wBACD,IAAI,eAAe,GAAG,qBAAqB,CAAC,eAAe,CAAC;wBAC5D,OAAO,eAAe,IAAI,IAAI,IAAI,iBAAiB,CAAC,sBAAsB,CAAC,eAAe,CAAC,EAAE,CAAC;4BAC1F,eAAe,GAAG,eAAe,CAAC,eAAe,CAAC;wBACtD,CAAC;wBACD,IAAI,eAAe,IAAI,IAAI,EAAE,CAAC;4BAC1B,4EAA4E;4BAC5E,IAAI,aAAa,GAAI,eAA+B,CAAC,SAAS,CAAC;4BAC/D,IAAI,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,aAAa,EAAE,CAAC;gCAC7C,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,aAAa,CAAC;4BAC/C,CAAC;4BACD,KAAI,CAAC,mBAAmB,CAAC,eAA0B,CAAC,CAAC;wBACzD,CAAC;6BAAM,CAAC;4BACJ,qBAAqB,CAAC,SAAS,CAAC,MAAM,CAAC,2CAA2C,CAAC,CAAC;wBACxF,CAAC;wBACD,OAAO;oBACX,CAAC;oBACD,IAAI,KAAK,CAAC,GAAG,IAAI,KAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC9E,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,IAAI,qBAAqB,GAAG,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,4CAA4C,CAAC,CAAC;wBACzG,IAAI,qBAAqB,IAAI,IAAI,EAAE,CAAC;4BAChC,0CAA0C;4BAC1C,IAAI,aAAa,GAAG,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC;4BAChD,OAAO,aAAa,IAAI,IAAI,IAAI,iBAAiB,CAAC,sBAAsB,CAAC,aAAa,CAAC,EAAE,CAAC;gCACtF,aAAa,GAAG,aAAa,CAAC,WAAW,CAAC;4BAC9C,CAAC;4BACD,IAAI,aAAa,IAAI,IAAI,EAAE,CAAC;gCACxB,KAAI,CAAC,mBAAmB,CAAC,aAAwB,CAAC,CAAC;gCACnD,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;4BACnC,CAAC;4BACD,OAAO;wBACX,CAAC;wBACD,IAAI,eAAe,GAAG,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,WAAW,CAAC;wBACzD,OAAO,eAAe,IAAI,IAAI,IAAI,iBAAiB,CAAC,sBAAsB,CAAC,eAAe,CAAC,EAAE,CAAC;4BAC1F,eAAe,GAAG,eAAe,CAAC,WAAW,CAAC;wBAClD,CAAC;wBACD,IAAI,eAAe,IAAI,IAAI,EAAE,CAAC;4BAC1B,6FAA6F;4BAC7F,IAAI,gBAAgB,GAAI,eAA+B,CAAC,SAAS,GAAI,eAA+B,CAAC,YAAY,CAAC;4BAClH,IAAI,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,YAAY,GAAG,gBAAgB,EAAE,CAAC;gCAChF,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,gBAAgB,GAAG,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC;4BAClF,CAAC;4BACD,KAAI,CAAC,mBAAmB,CAAC,eAA0B,CAAC,CAAC;wBACzD,CAAC;6BAAM,CAAC;4BACJ,qBAAqB,CAAC,SAAS,CAAC,MAAM,CAAC,2CAA2C,CAAC,CAAC;wBACxF,CAAC;wBACD,OAAO;oBACX,CAAC;oBACD,IAAI,KAAK,CAAC,GAAG,IAAI,KAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,IAAI,KAAI,CAAC,MAAM,CAAC,SAAS,IAAI,KAAK,CAAC,GAAG,IAAI,KAAI,CAAC,MAAM,CAAC,SAAS,IAAI,KAAK,CAAC,GAAG,IAAI,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;wBACpJ,sGAAsG;wBACtG,OAAO;oBACX,CAAC;oBACD,KAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,UAAU,EAAE;oBAC/C,kGAAkG;oBAClG,6HAA6H;oBAC7H,yHAAyH;oBACzH,4JAA4J;oBAC5J,UAAU,CAAC;wBACP,IAAI,KAAI,CAAC,oBAAoB,EAAE,EAAE,CAAC;4BAC9B,OAAO;wBACX,CAAC;wBACD,KAAI,CAAC,eAAe,EAAE,CAAC;oBAC3B,CAAC,EAAE,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE;oBAC9C,IAAI,KAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;wBACtC,KAAI,CAAC,eAAe,EAAE,CAAC;wBACvB,KAAI,CAAC,eAAe,EAAE,CAAC;oBAC3B,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;YAED,iCAAe,GAAf;gBAAA,iBAyDC;gBAxDG,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC;gBAE1C,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC;oBACvD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC;wBAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;wBAC/B,KAAK,GAAG,EAAE,CAAC;oBACf,CAAC;gBACL,CAAC;qBAAM,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,CAAC;oBACvE,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,OAAO;gBACX,CAAC;gBACD,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAChD,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;oBAC/B,OAAO;gBACX,CAAC;gBACD,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,CAAC;oBACxD,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAA,UAAU;wBACrD,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE,CAAC;4BACjC,yDAAyD;4BACzD,OAAO;wBACX,CAAC;wBACD,IAAI,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC;wBACjC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,KAAI,CAAC,OAAO,CAAC,UAAU,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,KAAI,CAAC,uBAAuB,EAAE,EAAE,CAAC;4BAClI,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;wBAC1C,CAAC;6BAAM,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,EAAC,WAAW,EAAE,MAAM,EAAC,CAAC,KAAK,CAAC,EAAE,CAAC;4BAClG,oFAAoF;4BACpF,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;wBACnC,CAAC;oBACL,CAAC,CAAC,CAAC;oBACH,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;wBAC1C,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iCAAiC,EAAE,CAAC;4BAClG,IAAI,CAAC,aAAa,CAAC;gCACf,EAAE,EAAE,IAAI;gCACR,KAAK,EAAE,KAAK;gCACZ,UAAU,EAAE,KAAK;gCACjB,IAAI,EAAE,YAAY;gCAClB,qBAAqB,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iCAAiC;gCAC5E,eAAe,EAAE,IAAI;gCACrB,QAAQ,EAAE,IAAI;6BACjB,CAAC,CAAC;wBAEP,CAAC;6BAAM,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;4BAC3C,IAAI,CAAC,aAAa,CAAC;gCACf,EAAE,EAAE,IAAI;gCACR,KAAK,EAAE,YAAY;gCACnB,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa;gCAC7C,IAAI,EAAE,YAAY;gCAClB,qBAAqB,EAAE,IAAI;gCAC3B,eAAe,EAAE,IAAI;gCACrB,QAAQ,EAAE,IAAI;6BACjB,CAAC,CAAC;wBACP,CAAC;oBACL,CAAC;gBACL,CAAC;YACL,CAAC;YAED;;eAEG;YACH,iCAAe,GAAf;gBACI,yGAAyG;gBACzG,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,0CAA0C,CAAC,CAAC;gBAC5E,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;gBAEpC,IAAI,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,8CAA8C,CAAC,CAAC;gBAChH,uBAAuB,CAAC,OAAO,CAAC,UAAA,WAAW;oBACvC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,2CAA2C,CAAC,CAAC;gBAC9E,CAAC,CAAC,CAAA;YACN,CAAC;YAED;;eAEG;YACH,iCAAe,GAAf;gBACI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;gBACzE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;gBAEzC,IAAM,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC;gBACjF,IAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;gBACxD,IAAM,cAAc,GAAG,MAAM,CAAC,WAAW,CAAC;gBAC1C,IAAM,UAAU,GAAG,cAAc,GAAG,mBAAmB,CAAC;gBACxD,IAAI,UAAU,GAAG,iBAAiB,EAAE,CAAC;oBACjC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;gBAC3E,CAAC;qBAAM,CAAC;oBACJ,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,sCAAsC,CAAC,CAAC;gBAC9E,CAAC;YACL,CAAC;YAED,yCAAuB,GAAvB;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,KAAK,OAAO,CAAC;YACtD,CAAC;YAED,+CAA6B,GAA7B,UAA8B,KAAa;gBACvC,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC3D,YAAY,CAAC,OAAO,CAAC,UAAA,WAAW;oBAC5B,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,2CAA2C,CAAC,CAAC;gBAC9E,CAAC,CAAC,CAAA;gBACF,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;YACnF,CAAC;YAED,qCAAmB,GAAnB,UAAoB,WAAoB;gBACpC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,8CAA8C,CAAC,CAAC,OAAO,CAAC,UAAA,sBAAsB;oBAC5G,sBAAsB,CAAC,SAAS,CAAC,MAAM,CAAC,2CAA2C,CAAC,CAAC;gBACzF,CAAC,CAAC,CAAA;gBACF,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;YAC3E,CAAC;YAED;;eAEG;YACH,sCAAoB,GAApB;gBACI,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YACzD,CAAC;YAED;;eAEG;YACH,kCAAgB,GAAhB;gBACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,EAAE,CAAC;YACpC,CAAC;YAED;;eAEG;YACH,qCAAmB,GAAnB;;gBACI,MAAA,IAAI,CAAC,OAAO,0CAAE,KAAK,EAAE,CAAC;gBACtB,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,CAAC;YAED;;;;eAIG;YACH,oCAAkB,GAAlB,UAAmB,KAAa;gBAC5B,IAAI,EAAE,GAAG,IAAI,CAAC;gBACd,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;gBACzB,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;oBACd,EAAE,CAAC,2BAA2B,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;oBAC/C,EAAE,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC;wBAC3B,OAAO,EAAE,CAAC,OAAO,CAAC;oBACtB,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;gBACvC,CAAC;qBAAM,CAAC;oBACJ,EAAE,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC;wBAC3B,OAAO,EAAE,CAAC,OAAO,CAAC;wBAClB,EAAE,CAAC,2BAA2B,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;oBACnD,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC;YAED,iDAA+B,GAA/B,UAAgC,WAAwB;gBACpD,WAAW,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,qBAAqB,EAAE;oBAC7D,MAAM,EAAE;wBACJ,KAAK,EAAE,WAAW,CAAC,OAAO,CAAC,KAAK;wBAChC,IAAI,EAAE,WAAW,CAAC,OAAO,CAAC,IAAI;wBAC9B,IAAI,EAAE,WAAW,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI;qBACzC;iBACJ,CAAC,CAAC,CAAC;YACR,CAAC;YAED,6CAA2B,GAA3B,UAA4B,KAAa;gBAAzC,iBA0DC;gBAzDG,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;oBAClD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;gBACzB,CAAC;gBAED,IAAM,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;gBACrC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;oBAClB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBAEpB,KAAI,CAAC,gBAAgB,EAAE,CAAC;oBAExB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;oBAC9B,yFAAyF;oBACzF,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,CAAC;wBAC7B,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBAChC,CAAC;oBAED,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC;wBACpC,IAAI,KAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,KAAI,CAAC,OAAO,CAAC,UAAU,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,KAAI,CAAC,uBAAuB,EAAE,EAAE,CAAC;4BAC/K,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,UAAsB,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,EAArC,CAAqC,CAAC,CAAC;4BAC9F,IAAI,eAAe,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAe,CAAC;4BAC1D,IAAI,KAAK,GAAG,eAAe,CAAC,EAAE,IAAI,eAAe,CAAC,KAAK,CAAC;4BACxD,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,eAAe,CAAC,UAAU,EAAE,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;4BAC3F,OAAO;wBACX,CAAC;wBACD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,UAAsB,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAA9B,CAA8B,CAAC,CAAC;wBACvF,IAAI,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;4BAC1C,IAAI,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,IAAI,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iCAAiC,EAAE,CAAC;gCAClG,KAAI,CAAC,aAAa,CAAC;oCACf,EAAE,EAAE,IAAI;oCACR,KAAK,EAAE,KAAK;oCACZ,UAAU,EAAE,KAAK;oCACjB,IAAI,EAAE,YAAY;oCAClB,qBAAqB,EAAE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iCAAiC;oCAC5E,eAAe,EAAE,IAAI;oCACrB,QAAQ,EAAE,IAAI;iCACjB,CAAC,CAAC;4BAEP,CAAC;iCAAM,IAAI,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;gCAC3C,KAAI,CAAC,aAAa,CAAC;oCACf,EAAE,EAAE,IAAI;oCACR,KAAK,EAAE,YAAY;oCACnB,UAAU,EAAE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa;oCAC7C,IAAI,EAAE,YAAY;oCAClB,qBAAqB,EAAE,IAAI;oCAC3B,eAAe,EAAE,IAAI;oCACrB,QAAQ,EAAE,IAAI;iCACjB,CAAC,CAAC;4BACP,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC,CAAC;gBACF,IAAI,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;gBAC/D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC;gBAC/C,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC;gBACnC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAClE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACxB,CAAC;YAED;;;;;eAKG;YACH,+BAAa,GAAb,UAAc,UAAsB,EAAE,eAAsB;gBAAtB,gCAAA,EAAA,sBAAsB;gBACxD,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBAExC,IAAI,KAAK,GAAG,UAAU,CAAC,EAAE,IAAI,UAAU,CAAC,KAAK,CAAC;gBAC9C,IAAI,IAAI,GAAG,UAAU,CAAC,eAAe,IAAI,UAAU,CAAC,UAAU,CAAC;gBAE/D,OAAO,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC9B,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBAC5B,OAAO,CAAC,OAAO,CAAC,SAAS,GAAG,UAAU,CAAC,UAAU,CAAC;gBAClD,IAAI,UAAU,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;oBAC1B,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;gBAC3C,CAAC;gBACD,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;oBACtB,OAAO,CAAC,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC;gBACtC,CAAC;gBAED,IAAI,EAAE,GAAG,IAAI,CAAC;gBACd,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,MAAa;oBAC5C,IAAI,KAAK,IAAI,YAAY,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;wBAC/C,OAAO;oBACX,CAAC;oBACD,IAAI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC;wBACrD,IAAI,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,sCAAsC,CAAC,EAAE,CAAC;4BACrE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAClC,CAAC;6BAAM,CAAC;4BACJ,IAAI,OAAO,CAAC,OAAO,CAAC,YAAY,KAAK,OAAO,EAAE,CAAC;gCAC3C,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;4BACpF,CAAC;4BACD,EAAE,CAAC,+BAA+B,CAAC,OAAO,CAAC,CAAC;wBAChD,CAAC;oBACL,CAAC;yBAAM,CAAC;wBACJ,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC;wBACrC,IAAI,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,sCAAsC,CAAC,EAAE,CAAC;4BACrE,IAAI,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,MAAqB,CAAC;4BAClD,WAAW,CAAC,mBAAmB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;wBAC3D,CAAC;6BAAM,CAAC;4BACJ,IAAI,OAAO,CAAC,OAAO,CAAC,YAAY,KAAK,OAAO,EAAE,CAAC;gCAC3C,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;4BACpF,CAAC;4BACD,EAAE,CAAC,+BAA+B,CAAC,OAAO,CAAC,CAAC;wBAChD,CAAC;oBACL,CAAC;oBACD,EAAE,CAAC,gBAAgB,EAAE,CAAC;oBACtB,EAAE,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;gBAEH,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;oBACtB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;gBACpE,CAAC;gBAED,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,wCAAwC,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;oBAC7G,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;gBAClE,CAAC;gBAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACtC,IAAI,eAAe,EAAE,CAAC;oBAClB,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;gBAED,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;YAClD,CAAC;YAeL,cAAC;QAAD,CAAC,AA3aqB;;QA8ZX,kBAAe,GAAuB,UAAU,UAAsB;YACzE,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC1C,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,eAAe,IAAI,UAAU,CAAC,UAAU,CAAC;YAEzE,IAAI,UAAU,CAAC,qBAAqB,EAAE,CAAC;gBACnC,IAAI,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAClD,WAAW,CAAC,WAAW,GAAG,UAAU,CAAC,qBAAqB,CAAC;gBAC3D,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;gBACvE,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YACpC,CAAC;YAED,OAAO,MAAM,CAAC;QAClB,CAAC;WA1ac,CA2alB;IAYL,wBAAC;CAAA,AAtyCD,IAsyCC","sourcesContent":["interface Token {\n    value: string,\n    text: string,\n    type: string | null\n}\n\ninterface Suggestion {\n    id: string | null,\n    value: string,\n    fieldLabel: string,\n    type: string | null,\n    completionLabel: string | null,\n    completionDescription: string | null,\n    disabled: boolean | null\n}\n\ninterface Options {\n    name: string,\n    selector: HTMLElement | string,\n    noMatchesText: string | null,\n    noMatchesCustomEntriesDescription: string | null,\n    placeholderText: string | null,\n    initialTokens: Array<Token> | null,\n    initialSuggestions: Array<Suggestion> | null,\n    tokenRenderer: TokenRenderer,\n    selectMode: SelectModes,\n    suggestionsUri: string,\n    suggestionsUriBuilder: SuggestionUriBuilder,\n    suggestionRenderer: SuggestionRenderer,\n    minCharactersForSuggestion: number,\n    allowCustomEntries: boolean,\n    readonly: boolean,\n    optional: boolean,\n    showClearButton: boolean,\n    enableTabulator: boolean,\n    showSuggestionsOnFocus: boolean,\n    requestDelay: number\n}\n\nenum SelectModes {\n    SINGLE, MULTI, SEARCH\n}\n\ninterface SelectMode {\n    addToken(suggestionValue: string | null, suggestionText: string | null, suggestionType: string | null, silent: boolean): void;\n\n    handleInputAsValue(input: string): void;\n\n    updateHasValue(): void;\n\n    initEventListeners(): void;\n\n    clear(silent: boolean): void;\n\n    clearCurrentInput(): void;\n}\n\ninterface SingleSelect extends SelectMode {\n}\n\ninterface MultiSelect extends SelectMode {\n    removeToken(token: HTMLSpanElement): void;\n\n    removeLastToken(): void;\n\n    removeTokenWithText(textContent: any): void;\n}\n\ninterface Autocomplete {\n    suggestions: any;\n\n    initEventListeners(): void;\n\n    requestSuggestions(value: string): void;\n\n    highlightSuggestionAtPosition(arg0: number): void;\n\n    addSuggestion(suggestion: Suggestion, showSuggestions: boolean): void;\n\n    clearSuggestions(): void;\n\n    showSuggestions(): void;\n\n    hideSuggestions(): void;\n\n    loadSuggestions(): void;\n\n    areSuggestionsDisplayed(): boolean;\n\n    areSuggestionsActive(): boolean;\n\n    highlightSuggestion(arg0: Element): void;\n\n    dispatchSuggestionSelectedEvent(_suggestion: HTMLElement): void;\n}\n\ninterface TokenRenderer {\n    (token: Token): HTMLElement;\n}\n\ninterface SuggestionRenderer {\n    (suggestion: Suggestion): HTMLElement;\n}\n\ninterface SuggestionUriBuilder {\n    (query: string): string;\n}\n\nclass TokenAutocomplete {\n\n    KEY_BACKSPACE = 'Backspace';\n    KEY_ENTER = 'Enter';\n    KEY_TAB = 'Tab';\n    KEY_UP = 'ArrowUp';\n    KEY_DOWN = 'ArrowDown';\n    KEY_LEFT = 'ArrowLeft';\n    KEY_RIGHT = 'ArrowRight';\n    KEY_ESC = 'Escape';\n\n    options: Options;\n    container: any;\n    tokenContainer: HTMLDivElement;\n    hiddenSelect: HTMLSelectElement;\n    textInput: HTMLSpanElement;\n\n    select: SelectMode;\n    autocomplete: Autocomplete;\n\n    defaults: Options = {\n        name: '',\n        selector: '',\n        noMatchesText: null,\n        noMatchesCustomEntriesDescription: null,\n        placeholderText: 'enter some text',\n        initialTokens: null,\n        initialSuggestions: null,\n        tokenRenderer: TokenAutocomplete.MultiSelect.defaultRenderer,\n        suggestionsUri: '',\n        selectMode: SelectModes.MULTI,\n        suggestionsUriBuilder: function (query) {\n            // We have to do this manually instead of using URL, as we can't be sure that a polyfill for IE11 is present\n            const querySeparator = this.suggestionsUri.indexOf('?') >= 0 ? '&' : '?';\n            return this.suggestionsUri + querySeparator + 'query=' + query;\n        },\n        suggestionRenderer: TokenAutocomplete.Autocomplete.defaultRenderer,\n        minCharactersForSuggestion: 1,\n        allowCustomEntries: true,\n        readonly: false,\n        optional: false,\n        showClearButton: false,\n        enableTabulator: true,\n        showSuggestionsOnFocus: true,\n        requestDelay: 200\n    };\n    log: any;\n\n    constructor(options: Options) {\n        this.options = {...this.defaults, ...options};\n\n        if (this.options.selector instanceof HTMLElement) {\n            this.container = this.options.selector;\n        } else {\n            let passedContainer = document.querySelector(this.options.selector);\n            if (!passedContainer) {\n                throw new Error('passed selector does not point to a DOM element.');\n            }\n            this.container = passedContainer;\n        }\n\n        this.container.classList.add('token-autocomplete-container');\n\n        this.tokenContainer = document.createElement('div');\n        this.tokenContainer.classList.add('token-autocomplete-tokens');\n        this.container.appendChild(this.tokenContainer);\n\n        if (!Array.isArray(this.options.initialTokens) && !Array.isArray(this.options.initialSuggestions)) {\n            this.parseTokensAndSuggestions();\n        }\n\n        this.hiddenSelect = document.createElement('select');\n        this.hiddenSelect.id = this.container.id + '-select';\n        this.hiddenSelect.name = this.options.name;\n        this.hiddenSelect.ariaHidden = 'true';\n        this.hiddenSelect.setAttribute('multiple', 'true');\n        this.hiddenSelect.setAttribute('autocomplete', 'off');\n        this.hiddenSelect.style.display = 'none';\n\n        // If the field is readonly, we don't want to show the clear button.\n        if (this.options.readonly) {\n            this.options.showClearButton = false;\n            if (this.options.tokenRenderer === TokenAutocomplete.MultiSelect.defaultRenderer) {\n                this.options.tokenRenderer = TokenAutocomplete.MultiSelect.defaultReadonlyRenderer;\n            }\n        }\n\n        this.textInput = document.createElement('span');\n        this.textInput.id = this.container.id + '-input';\n        this.textInput.classList.add('token-autocomplete-input');\n        if (!this.options.readonly) {\n            if (this.options.placeholderText != null) {\n                this.textInput.dataset.placeholder = this.options.placeholderText;\n            }\n\n            this.textInput.contentEditable = 'true';\n            this.textInput.addEventListener(\"paste\", event => {\n                event.preventDefault();\n                if (event.clipboardData) {\n                    //  Normal handling for modern browsers\n                    const text = event.clipboardData?.getData(\"text/plain\");\n                    document.execCommand(\"insertHTML\", false, text);\n                } else {\n                    // Fallback logic for IE11\n                    const globalText = window.clipboardData?.getData(\"Text\");\n                    const range = document.getSelection()?.getRangeAt(0);\n                    range?.insertNode(document.createTextNode(globalText));\n                }\n            });\n        } else {\n            this.container.classList.add('token-autocomplete-readonly');\n        }\n        this.tokenContainer.appendChild(this.textInput);\n\n\n        this.container.appendChild(this.hiddenSelect);\n        this.addHiddenEmptyOption();\n\n        if (this.options.selectMode == SelectModes.MULTI) {\n            this.select = new TokenAutocomplete.MultiSelect(this);\n        } else if (this.options.selectMode == SelectModes.SEARCH) {\n            this.select = new TokenAutocomplete.SearchMultiSelect(this);\n        } else if (this.options.selectMode == SelectModes.SINGLE) {\n            this.hiddenSelect.removeAttribute('multiple');\n            this.select = new TokenAutocomplete.SingleSelect(this);\n        }\n        this.autocomplete = new TokenAutocomplete.Autocomplete(this);\n\n        this.select.initEventListeners();\n        this.autocomplete.initEventListeners();\n\n        this.debug(false);\n\n        if (Array.isArray(this.options.initialTokens)) {\n            this.val(this.options.initialTokens);\n        }\n\n        this.container.tokenAutocomplete = this as TokenAutocomplete;\n\n        if (this.options.selectMode == SelectModes.SINGLE && !this.options.optional && this.val().length == 0) {\n            this.autocomplete.loadSuggestions();\n        }\n    }\n\n    /**\n     * Searches the element given as a container for option elements and creates active tokens (when the option is marked selected)\n     * and suggestions (all options found) from these. During this all found options are removed from the DOM.\n     */\n    parseTokensAndSuggestions() {\n        let initialTokens: Array<Token> = [];\n        let initialSuggestions: Array<Suggestion> = [];\n\n        let options: NodeListOf<HTMLOptionElement> = this.container.querySelectorAll('option');\n\n        options.forEach(option => {\n            if (option.text != null) {\n                if (option.hasAttribute('selected')) {\n                    initialTokens.push({value: option.value, text: option.text, type: null});\n                }\n                initialSuggestions.push({\n                    id: null,\n                    value: option.value,\n                    fieldLabel: option.text,\n                    type: null,\n                    completionDescription: option.dataset.description || null,\n                    completionLabel: null,\n                    disabled: option.disabled || false\n                });\n            }\n            this.container.removeChild(option);\n        });\n\n        if (initialSuggestions.length > 0) {\n            this.options.initialSuggestions = initialSuggestions;\n            if (!this.options.optional && initialTokens.length == 0) {\n                let firstSuggestion = initialSuggestions[0];\n                initialTokens.push({\n                    value: firstSuggestion.value, text: firstSuggestion.fieldLabel, type: firstSuggestion.type\n                });\n            }\n        }\n\n        if (initialTokens.length > 0) {\n            this.options.initialTokens = initialTokens;\n        }\n    }\n\n    /**\n     * Clears the currently present tokens and creates new ones from the given input value, returns new tokens afterwards.\n     *\n     * The current tokens are only overwritten (cleared and added) when a value parameter is given.\n     * In addition to the possibility of setting the value of the input this method also returns the values of all present tokens.\n     *\n     * @param {(Array<Token>|Token)} value - either the name of a single token or a list of tokens to create\n     * @param {boolean} silent - whether appropriate events should be triggered when changing tokens or not\n     *\n     * @returns an array of the values of all current (after update) tokens of the input field\n     */\n    val(value: Array<Token> | Token | null = null, silent: boolean = false): Array<string> {\n        if (typeof value !== 'undefined' && value !== null) {\n            this.select.clear(silent);\n            this.addToken(value, silent);\n        }\n\n        let tokens: Array<string> = [];\n        this.hiddenSelect.querySelectorAll('option').forEach(option => {\n            if (option.dataset.value != null && option.dataset.value !== \"\") {\n                tokens.push(option.dataset.value);\n            }\n        });\n        return tokens;\n    }\n\n\n    /**\n     * Adds the given tokens to the field.\n     *\n     * The current tokens are only added when a value parameter is given.\n     *\n     * @param {(Array<Token>|Token)} value - either the name of a single token or a list of tokens to create\n     * @param {boolean} silent - whether appropriate events should be triggered when changing tokens or not\n     */\n    addToken(value: Array<Token> | Token, silent: boolean = false) {\n        if (Array.isArray(value)) {\n            value.forEach(token => {\n                if (typeof token === 'object') {\n                    this.select.addToken(token.value, token.text, token.type, silent);\n                }\n            });\n        } else {\n            this.select.addToken(value.value, value.text, value.type, silent);\n        }\n    }\n\n    /**\n     * Returns the current text the user has input which is not converted into a token.\n     */\n    getCurrentInput() {\n        return this.textInput.textContent || '';\n    }\n\n    setCurrentInput(input: string, silent: boolean) {\n        this.textInput.textContent = input;\n        this.select.updateHasValue();\n\n        if (silent) {\n            return;\n        }\n\n        this.container.dispatchEvent(new CustomEvent('query-changed', {\n            detail: {\n                query: input\n            }\n        }));\n    }\n\n    addHiddenOption(tokenValue: string, tokenText: string, tokenType: string | null, isLiveEntry: boolean = false) {\n        tokenValue = tokenValue.trim();\n        tokenText = tokenText.trim();\n        let _emptyToken = this.hiddenSelect.querySelector('.empty-token');\n        if (_emptyToken) {\n            this.hiddenSelect.removeChild(_emptyToken);\n        }\n        let _existingLiveEntry = this.hiddenSelect.querySelector('.token-autocomplete-live-entry');\n        if (_existingLiveEntry) {\n            this.hiddenSelect.removeChild(_existingLiveEntry);\n        }\n        let _existingOption = this.findOptionWithValue(tokenValue);\n        if (_existingOption) {\n            this.hiddenSelect.removeChild(_existingOption);\n        }\n        const option = document.createElement('option');\n        option.text = tokenText;\n        option.value = tokenValue;\n        option.selected = true;\n        option.dataset.text = tokenText;\n        option.dataset.value = tokenValue;\n        if (tokenType != null) {\n            option.dataset.type = tokenType;\n        }\n        if (isLiveEntry) {\n            option.classList.add('token-autocomplete-live-entry');\n        }\n        this.hiddenSelect.add(option);\n    }\n\n    findOptionWithValue(optionValue: string) {\n        for (let i = 0; i < this.hiddenSelect.options.length; i++) {\n            let option = this.hiddenSelect.options[i];\n            if (option.value === optionValue) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    addHiddenEmptyOption() {\n        let _emptyToken = this.hiddenSelect.querySelector('.empty-token');\n        if (_emptyToken) {\n            _emptyToken.setAttribute('selected', 'true');\n        } else {\n            const _newOption = document.createElement('option');\n            _newOption.text = '';\n            _newOption.value = '';\n            _newOption.selected = true;\n            _newOption.classList.add('empty-token');\n            this.hiddenSelect.add(_newOption);\n        }\n    }\n\n    setPlaceholderText(placeholderText: string | undefined) {\n        this.textInput.dataset.placeholder = placeholderText;\n    }\n\n    debug(state: boolean) {\n        if (state) {\n            this.log = console.log.bind(window.console);\n        } else {\n            this.log = () => {\n                // Intentionally left empty to only log when debugging is enabled.\n            }\n        }\n    }\n\n    static MultiSelect = class implements MultiSelect {\n\n        parent: TokenAutocomplete;\n        container: any;\n        tokenContainer: HTMLDivElement;\n        options: Options;\n        renderer: TokenRenderer;\n\n        constructor(parent: TokenAutocomplete) {\n            this.parent = parent;\n            this.container = parent.container;\n            this.tokenContainer = parent.tokenContainer;\n            this.options = parent.options;\n            this.renderer = parent.options.tokenRenderer;\n\n            if (this.options.showClearButton) {\n                let clearButton = document.createElement('span');\n                clearButton.classList.add('token-autocomplete-delete-button');\n                this.container.appendChild(clearButton);\n            }\n        }\n\n        clearCurrentInput(): void {\n            this.parent.textInput.textContent = '';\n        }\n\n        initEventListeners(): void {\n            const parent = this.parent;\n            if (parent.options.readonly) {\n                return;\n            }\n\n            let isComposing = false;\n            parent.textInput.addEventListener('compositionstart', () => {\n                isComposing = true;\n            })\n            parent.textInput.addEventListener('compositionend', event => {\n                isComposing = false;\n\n                // handles hitting ENTER on GBoard, which uses composition events instead of individual key triggers\n                let inputString = event.data;\n                if (inputString.charAt(inputString.length - 1) === \"\\n\") {\n                    event.preventDefault();\n                    this.handleInput(parent.autocomplete.suggestions.querySelector('.token-autocomplete-suggestion-highlighted'));\n                }\n            })\n\n            parent.textInput.addEventListener('keydown', event => {\n                if (isComposing) return;\n\n                if (event.key == parent.KEY_ENTER || (event.key == parent.KEY_TAB && parent.options.enableTabulator && parent.autocomplete.areSuggestionsDisplayed() && parent.autocomplete.suggestions.childNodes.length == 1)) {\n                    event.preventDefault();\n\n                    let highlightedSuggestion = parent.autocomplete.suggestions.querySelector('.token-autocomplete-suggestion-highlighted');\n\n                    if (parent.options.enableTabulator && highlightedSuggestion == null && event.key == parent.KEY_TAB && parent.autocomplete.areSuggestionsDisplayed()) {\n                        highlightedSuggestion = parent.autocomplete.suggestions.firstChild;\n                    }\n\n                    this.handleInput(highlightedSuggestion);\n                } else if (parent.getCurrentInput() === '' && event.key == parent.KEY_BACKSPACE) {\n                    event.preventDefault();\n                    this.removeLastToken();\n                }\n                if ((event.key == parent.KEY_DOWN || event.key == parent.KEY_UP) && parent.autocomplete.suggestions.childNodes.length > 0) {\n                    event.preventDefault();\n                }\n            });\n\n            parent.textInput.addEventListener('keyup', () => this.updateHasValue());\n\n            if (this.options.showClearButton) {\n                parent.container.querySelector('.token-autocomplete-delete-button')?.addEventListener('click', () => {\n                    this.clear(true);\n                    this.clearCurrentInput();\n                    this.updateHasValue();\n\n                    this.container.dispatchEvent(new CustomEvent('input-cleared'));\n                });\n            }\n        }\n\n        handleInput(highlightedSuggestion: any): void {\n            if (highlightedSuggestion !== null) {\n                this.clearCurrentInput();\n                if (highlightedSuggestion.classList.contains('token-autocomplete-suggestion-active')) {\n                    this.removeTokenWithText(highlightedSuggestion.dataset.tokenText);\n                } else {\n                    if (highlightedSuggestion.dataset.becomesToken !== 'false') {\n                        this.addToken(highlightedSuggestion.dataset.value, highlightedSuggestion.dataset.tokenText, highlightedSuggestion.dataset.type, false);\n                    }\n                    this.parent.autocomplete.dispatchSuggestionSelectedEvent(highlightedSuggestion);\n                }\n            } else {\n                this.handleInputAsValue(this.parent.getCurrentInput());\n            }\n            this.parent.autocomplete.clearSuggestions();\n            this.parent.autocomplete.hideSuggestions();\n        }\n\n        /**\n         * Updates the 'token-autocomplete-has-value' class of this MultiSelect autocomplete.\n         */\n        updateHasValue(): void {\n            if (this.parent.getCurrentInput() === '' && this.parent.val().length === 0) {\n                this.container.classList.remove('token-autocomplete-has-value');\n            } else {\n                this.container.classList.add('token-autocomplete-has-value');\n            }\n        }\n\n        /**\n         * Adds the current user input as a net token and resets the input area so new text can be entered.\n         *\n         * @param {string} input - the actual input the user entered\n         */\n        handleInputAsValue(input: string): void {\n            if (input != '' && this.parent.options.allowCustomEntries) {\n                this.clearCurrentInput();\n                this.addToken(input, input, null);\n                return;\n            }\n            if (this.parent.autocomplete.suggestions.childNodes.length === 1 && this.parent.autocomplete.suggestions.childNodes[0].dataset.value != '_no_match_') {\n                this.parent.autocomplete.suggestions.firstChild.click();\n            } else {\n                this.clearCurrentInput();\n            }\n        }\n\n        /**\n         * Adds a token with the specified name to the list of currently present tokens displayed to the user and the hidden select.\n         *\n         * @param {string} tokenValue - the actual value of the token to create\n         * @param {string} tokenText - the name of the token to create\n         * @param {string} tokenType - the type of the token to create\n         * @param {boolean} silent - whether an appropriate event should be triggered\n         */\n        addToken(tokenValue: string | null, tokenText: string | null, tokenType: string | null, silent: boolean = false) {\n            if (tokenValue === null || tokenText === null || tokenValue === '_no_match_') {\n                return;\n            }\n\n            tokenValue = tokenValue.trim();\n            tokenText = tokenText.trim();\n\n            this.parent.addHiddenOption(tokenValue, tokenText, tokenType);\n\n            let addedToken = {\n                value: tokenValue,\n                text: tokenText,\n                type: tokenType\n            };\n\n            let element = this.renderer(addedToken);\n\n            element.querySelector('.token-autocomplete-delete-button')?.addEventListener('click', () => {\n                this.removeToken(element);\n            });\n\n            this.tokenContainer.insertBefore(element, this.parent.textInput);\n            this.updateHasValue();\n\n            if (!silent) {\n                this.container.dispatchEvent(new CustomEvent('tokens-changed', {\n                    detail: {\n                        tokens: this.parent.val(),\n                        added: addedToken\n                    }\n                }));\n            }\n\n            this.parent.log('added token', addedToken);\n        }\n\n        /**\n         * Completely clears the currently present tokens from the field.\n         */\n        clear(silent: boolean = false) {\n            let tokens: NodeListOf<HTMLElement> = this.tokenContainer.querySelectorAll('.token-autocomplete-token');\n\n            tokens.forEach(token => this.removeToken(token, silent));\n        }\n\n        /**\n         * Removes the last token in the list of currently present token. This is the last added token next to the input field.\n         */\n        removeLastToken() {\n            let tokens = this.tokenContainer.querySelectorAll('.token-autocomplete-token');\n            let token = tokens[tokens.length - 1] as HTMLElement;\n            if (token) {\n                this.removeToken(token);\n            }\n        }\n\n        /**\n         * Removes the specified token from the list of currently present tokens.\n         *\n         * @param {Element} token - the token to remove\n         * @param {boolean} silent - whether an appropriate event should be triggered\n         */\n        removeToken(token: HTMLElement, silent: boolean = false) {\n            this.tokenContainer.removeChild(token);\n\n            let tokenText = token.dataset.text;\n            let hiddenOption = this.parent.hiddenSelect.querySelector('option[data-text=\"' + TokenAutocomplete.escapeQuotes(tokenText) + '\"]');\n            hiddenOption?.parentElement?.removeChild(hiddenOption);\n\n            let addedToken = {\n                value: token.dataset.value,\n                text: tokenText,\n                type: token.dataset.type || null\n            };\n\n            if (!silent) {\n                this.container.dispatchEvent(new CustomEvent('tokens-changed', {\n                    detail: {\n                        tokens: this.parent.val(),\n                        removed: addedToken\n                    }\n                }));\n            }\n\n            if (this.parent.val().length === 0) {\n                this.parent.addHiddenEmptyOption();\n            }\n\n            this.updateHasValue();\n\n            this.parent.log('removed token', token.textContent);\n        }\n\n        removeTokenWithText(tokenText: string | null) {\n            if (tokenText === null) {\n                return;\n            }\n            let token = this.tokenContainer.querySelector('.token-autocomplete-token[data-text=\"' + TokenAutocomplete.escapeQuotes(tokenText) + '\"]') as HTMLElement;\n            if (token !== null) {\n                this.removeToken(token);\n            }\n        }\n\n        static defaultRenderer: TokenRenderer = function (token: Token): HTMLElement {\n            const chip = document.createElement('span');\n            chip.classList.add('token-autocomplete-token');\n            chip.dataset.text = token.text;\n            chip.dataset.value = token.value;\n            if (token.type != null) {\n                chip.dataset.type = token.type;\n            }\n            chip.textContent = token.text;\n\n            let deleteToken = document.createElement('span');\n            deleteToken.classList.add('token-autocomplete-delete-button');\n            chip.appendChild(deleteToken);\n\n            return chip;\n        }\n\n        static defaultReadonlyRenderer: TokenRenderer = function (token: Token): HTMLElement {\n            const chip = document.createElement('span');\n            chip.classList.add('token-autocomplete-token');\n            chip.dataset.text = token.text;\n            chip.dataset.value = token.value;\n            if (token.type != null) {\n                chip.dataset.type = token.type;\n            }\n            chip.textContent = token.text;\n\n            return chip;\n        }\n    }\n\n    static SingleSelect = class implements SingleSelect {\n\n        parent: TokenAutocomplete;\n        container: any;\n        toggleButton: HTMLButtonElement;\n        options: Options;\n        renderer: TokenRenderer;\n        previousValue: any;\n        previousText: any;\n        previousType: any;\n\n        constructor(parent: TokenAutocomplete) {\n            this.parent = parent;\n            this.container = parent.container;\n            this.options = parent.options;\n\n            this.container.classList.add('token-autocomplete-singleselect');\n            this.parent.textInput.tabIndex = 0;\n            if (this.options.optional) {\n                let clearButton = document.createElement('span');\n                clearButton.classList.add('token-autocomplete-delete-button');\n                this.container.appendChild(clearButton);\n            }\n            this.toggleButton = document.createElement('button');\n            this.toggleButton.classList.add('token-autocomplete-toggle-button');\n            this.toggleButton.type = 'button';\n            this.container.appendChild(this.toggleButton);\n        }\n\n        /**\n         * Clears the current user input so new text can be entered.\n         *\n         * @param {boolean} silent - whether an appropriate event should be triggered\n         * @param {boolean} keepPreviousValue - if true, the previous value will be stored and shown as a placeholder\n         */\n        clear(silent: boolean, keepPreviousValue: boolean = true): void {\n            if (this.options.readonly) {\n                return;\n            }\n            let me = this;\n            let tokenText = me.parent.textInput.textContent;\n            let hiddenOption = me.parent.hiddenSelect.querySelector('option[data-text=\"' + TokenAutocomplete.escapeQuotes(tokenText) + '\"]') as HTMLElement;\n\n            this.container.classList.remove('token-autocomplete-has-value');\n\n            const previousValue = hiddenOption?.dataset.value;\n            const previousText = hiddenOption?.dataset.text;\n            const previousType = hiddenOption?.dataset.type;\n            if (keepPreviousValue) {\n                me.previousValue = previousValue;\n                me.previousText = previousText;\n                me.previousType = previousType;\n                if (hiddenOption == null && me.options.allowCustomEntries) {\n                    me.previousValue = tokenText;\n                    me.previousText = tokenText;\n                }\n                if (me.previousText && me.previousText !== '') {\n                    me.parent.textInput.dataset.placeholder = me.previousText;\n                }\n            } else {\n                // We should reset these fields, so they are not used to restore the previously selected value\n                // when the focusout event is handled after the click event on the suggestion.\n                delete me.previousValue;\n                delete me.previousText;\n                delete me.previousType;\n                if (me.parent.options.placeholderText != null) {\n                    me.parent.textInput.dataset.placeholder = me.parent.options.placeholderText;\n                }\n            }\n            hiddenOption?.parentElement?.removeChild(hiddenOption);\n            me.parent.addHiddenEmptyOption();\n            me.parent.textInput.textContent = '';\n            me.parent.textInput.contentEditable = 'true';\n\n            if (!silent) {\n                this.container.dispatchEvent(new CustomEvent('tokens-changed', {\n                    detail: {\n                        tokens: this.parent.val(),\n                        removed: {\n                            value: previousValue,\n                            text: previousText,\n                            type: previousType\n                        }\n                    }\n                }));\n            }\n        }\n\n        /**\n         * Adds the current user input as a net token and resets the input area so new text can be entered.\n         *\n         * @param {string} input - the actual input the user entered\n         */\n        handleInputAsValue(input: string): void {\n            if (input != '' && this.parent.options.allowCustomEntries) {\n                this.clearCurrentInput();\n                this.addToken(input, input, null, false);\n                this.parent.autocomplete.clearSuggestions();\n                this.parent.autocomplete.hideSuggestions();\n                return;\n            }\n            if (this.parent.autocomplete.suggestions.childNodes.length === 1 && this.parent.autocomplete.suggestions.childNodes[0].dataset.value != '_no_match_') {\n                this.parent.autocomplete.suggestions.firstChild.click();\n                return;\n            }\n            this.clear(true, false);\n        }\n\n        clearCurrentInput(): void {\n            this.clear(true);\n        }\n\n        /**\n         * Updates the 'token-autocomplete-has-value' class of this SingleSelect autocomplete.\n         */\n        updateHasValue(): void {\n            if (this.parent.getCurrentInput() === '' && this.parent.val().length === 0) {\n                this.container.classList.remove('token-autocomplete-has-value');\n            } else {\n                this.container.classList.add('token-autocomplete-has-value');\n            }\n        }\n\n        addToken(tokenValue: string | null, tokenText: string | null, tokenType: string | null, silent: boolean): void {\n            if (tokenValue === null || tokenText === null || tokenValue === '_no_match_') {\n                return;\n            }\n\n            tokenValue = tokenValue.trim();\n            tokenText = tokenText.trim();\n\n            this.clear(true, false);\n            this.parent.textInput.textContent = tokenText;\n            this.parent.textInput.contentEditable = 'false';\n            this.parent.textInput.blur();\n            if (tokenText !== '') {\n                this.container.classList.add('token-autocomplete-has-value');\n            }\n\n            this.parent.addHiddenOption(tokenValue, tokenText, tokenType);\n\n            if (!silent) {\n                this.container.dispatchEvent(new CustomEvent('tokens-changed', {\n                    detail: {\n                        tokens: this.parent.val(),\n                        added: {\n                            value: tokenValue,\n                            text: tokenText,\n                            type: tokenType\n                        }\n                    }\n                }));\n            }\n        }\n\n        initEventListeners(): void {\n            const parent = this.parent;\n            if (parent.options.readonly) {\n                return;\n            }\n\n            parent.textInput.addEventListener('compositionend', event => {\n                // handles hitting ENTER on GBoard, which uses composition events instead of individual key triggers\n                let inputString = event.data;\n                if (inputString.charAt(inputString.length - 1) === \"\\n\") {\n                    event.preventDefault();\n                    this.handleInput(parent.autocomplete.suggestions.querySelector('.token-autocomplete-suggestion-highlighted'));\n                }\n            })\n\n            parent.textInput.addEventListener('keydown', event => {\n                if (event.key == parent.KEY_ENTER || (event.key == parent.KEY_TAB && parent.options.enableTabulator && parent.autocomplete.areSuggestionsDisplayed() && parent.autocomplete.suggestions.childNodes.length == 1)) {\n                    event.preventDefault();\n\n                    let highlightedSuggestion = parent.autocomplete.suggestions.querySelector('.token-autocomplete-suggestion-highlighted');\n\n                    if (parent.options.enableTabulator && highlightedSuggestion == null && event.key == parent.KEY_TAB && parent.autocomplete.areSuggestionsDisplayed()) {\n                        highlightedSuggestion = parent.autocomplete.suggestions.firstChild;\n                    }\n\n                    this.handleInput(highlightedSuggestion);\n                }\n                if ((event.key == parent.KEY_DOWN || event.key == parent.KEY_UP) && parent.autocomplete.suggestions.childNodes.length > 0) {\n                    event.preventDefault();\n                }\n            });\n\n            if (parent.options.allowCustomEntries) {\n                parent.textInput.addEventListener('keyup', event => {\n                    if (event.key != parent.KEY_ENTER && event.key != parent.KEY_TAB && event.key != parent.KEY_DOWN && event.key != parent.KEY_UP) {\n                        event.preventDefault();\n                        parent.addHiddenOption(parent.getCurrentInput(), parent.getCurrentInput(), null, true);\n                    }\n                });\n            }\n\n            const focusInput = () => {\n                if (!parent.autocomplete.areSuggestionsDisplayed() && parent.options.showSuggestionsOnFocus) {\n                    parent.autocomplete.showSuggestions();\n                    parent.autocomplete.loadSuggestions();\n                }\n                // move the cursor into the editable div\n                const selection = window.getSelection();\n                const range = document.createRange();\n                selection?.removeAllRanges();\n                range.selectNodeContents(parent.textInput);\n                range.collapse(false);\n                selection?.addRange(range);\n                parent.textInput.focus();\n            };\n\n            parent.textInput.addEventListener('click', () => focusInput());\n\n            parent.textInput.addEventListener('focusout', (event: FocusEvent) => {\n                if (event.relatedTarget === this.toggleButton) {\n                    // If the focus is moved to the toggle button, we mark it so the click handler does not set focus again.\n                    this.toggleButton.dataset.inputWasFocused = 'true';\n                }\n                // Using setTimeout here seems hacky on first sight but ensures proper order of events / handling.\n                // We first want to handle a click on a suggestion (when one is made) before hiding the suggestions on focusout of the input.\n                // Not doing so could mean the suggestion is hidden before the click is handled und thus resulting in not being selected.\n                // This depends on the order in which a browser handles different events and when it sets the active pseudo-selector on clicked events (Firefox for example)\n                setTimeout(() => {\n                    if (parent.autocomplete.areSuggestionsActive()) {\n                        return;\n                    }\n                    const input = this.parent.getCurrentInput();\n                    if (this.parent.val().length !== 0 && this.parent.val()[0] !== '') {\n                        return;\n                    }\n                    if (input != '') {\n                        this.handleInputAsValue(input);\n                        return;\n                    }\n                    if (this.previousValue) {\n                        this.addToken(this.previousValue, this.previousText, this.previousType, true);\n                    }\n                }, 0);\n\n            });\n            parent.container.querySelector('.token-autocomplete-delete-button')?.addEventListener('click', () => {\n                this.clear(false, false);\n            });\n\n            this.toggleButton.addEventListener('click', () => {\n                if (this.toggleButton.dataset.inputWasFocused === 'true') {\n                    // The focus was moved to the toggle button, so we do not want to focus the input again.\n                    delete this.toggleButton.dataset.inputWasFocused;\n                    this.toggleButton.blur();\n                } else {\n                    // If the input is not focused, we want to focus it and show the suggestions.\n                    focusInput();\n                }\n            });\n        }\n\n        handleInput(highlightedSuggestion: any): void {\n            if (highlightedSuggestion !== null) {\n                this.addToken(highlightedSuggestion.dataset.value, highlightedSuggestion.dataset.tokenText, highlightedSuggestion.dataset.type, false);\n            } else {\n                this.handleInputAsValue(this.parent.getCurrentInput());\n            }\n            this.parent.autocomplete.clearSuggestions();\n            this.parent.autocomplete.hideSuggestions();\n        }\n    }\n\n    static SearchMultiSelect = class extends TokenAutocomplete.MultiSelect {\n        /**\n         * Instead of adding the custom user input as a token and handling it as a filter we let it remain in the input\n         * area and instead send an event so the user search request can be handled / executed.\n         *\n         * @param {string} input - the actual input the user entered\n         */\n        handleInputAsValue(input: string) {\n            this.container.dispatchEvent(new CustomEvent('query-changed', {\n                detail: {\n                    query: input\n                }\n            }));\n        }\n    }\n\n    static Autocomplete = class implements Autocomplete {\n\n        parent: TokenAutocomplete;\n        container: any;\n        options: Options;\n        suggestions: HTMLUListElement;\n        renderer: SuggestionRenderer;\n        request: XMLHttpRequest | null;\n        timeout: number | undefined;\n\n        constructor(parent: TokenAutocomplete) {\n            this.parent = parent;\n            this.container = parent.container;\n            this.options = parent.options;\n            this.renderer = parent.options.suggestionRenderer;\n\n            this.suggestions = document.createElement('ul');\n            this.suggestions.id = this.container.id + '-suggestions';\n            this.suggestions.classList.add('token-autocomplete-suggestions');\n\n            this.container.appendChild(this.suggestions);\n        }\n\n        initEventListeners() {\n            if (this.parent.options.readonly) {\n                return;\n            }\n            this.parent.textInput.addEventListener('keyup', event => {\n                if (event.key == this.parent.KEY_ESC) {\n                    this.hideSuggestions();\n                    this.parent.textInput.blur();\n                    return;\n                }\n                if (event.key == this.parent.KEY_UP && this.suggestions.childNodes.length > 0) {\n                    event.preventDefault();\n                    let highlightedSuggestion = this.suggestions.querySelector('.token-autocomplete-suggestion-highlighted');\n                    if (highlightedSuggestion == null) {\n                        // highlight last entry and scroll to bottom\n                        let bottomSuggestion = this.suggestions.lastChild;\n                        while (bottomSuggestion != null && TokenAutocomplete.shouldIgnoreSuggestion(bottomSuggestion)) {\n                            bottomSuggestion = bottomSuggestion.previousSibling;\n                        }\n                        if (bottomSuggestion != null) {\n                            this.highlightSuggestion(bottomSuggestion as Element);\n                            this.suggestions.scrollTop = this.suggestions.scrollHeight;\n                        }\n                        return;\n                    }\n                    let aboveSuggestion = highlightedSuggestion.previousSibling;\n                    while (aboveSuggestion != null && TokenAutocomplete.shouldIgnoreSuggestion(aboveSuggestion)) {\n                        aboveSuggestion = aboveSuggestion.previousSibling;\n                    }\n                    if (aboveSuggestion != null) {\n                        // if the suggestions is above the scroll position, scroll to the suggestion\n                        let suggestionTop = (aboveSuggestion as HTMLElement).offsetTop;\n                        if (this.suggestions.scrollTop > suggestionTop) {\n                            this.suggestions.scrollTop = suggestionTop;\n                        }\n                        this.highlightSuggestion(aboveSuggestion as Element);\n                    } else {\n                        highlightedSuggestion.classList.remove('token-autocomplete-suggestion-highlighted');\n                    }\n                    return;\n                }\n                if (event.key == this.parent.KEY_DOWN && this.suggestions.childNodes.length > 0) {\n                    event.preventDefault();\n                    let highlightedSuggestion = this.suggestions.querySelector('.token-autocomplete-suggestion-highlighted');\n                    if (highlightedSuggestion == null) {\n                        // highlight first entry and scroll to top\n                        let topSuggestion = this.suggestions.firstChild;\n                        while (topSuggestion != null && TokenAutocomplete.shouldIgnoreSuggestion(topSuggestion)) {\n                            topSuggestion = topSuggestion.nextSibling;\n                        }\n                        if (topSuggestion != null) {\n                            this.highlightSuggestion(topSuggestion as Element);\n                            this.suggestions.scrollTop = 0;\n                        }\n                        return;\n                    }\n                    let belowSuggestion = highlightedSuggestion?.nextSibling;\n                    while (belowSuggestion != null && TokenAutocomplete.shouldIgnoreSuggestion(belowSuggestion)) {\n                        belowSuggestion = belowSuggestion.nextSibling;\n                    }\n                    if (belowSuggestion != null) {\n                        // if the suggestions is not completely visible, scroll until the suggestion is at the bottom\n                        let suggestionBottom = (belowSuggestion as HTMLElement).offsetTop + (belowSuggestion as HTMLElement).offsetHeight;\n                        if (this.suggestions.scrollTop + this.suggestions.clientHeight < suggestionBottom) {\n                            this.suggestions.scrollTop = suggestionBottom - this.suggestions.clientHeight;\n                        }\n                        this.highlightSuggestion(belowSuggestion as Element);\n                    } else {\n                        highlightedSuggestion.classList.remove('token-autocomplete-suggestion-highlighted');\n                    }\n                    return;\n                }\n                if (event.key == this.parent.KEY_LEFT || event.key == this.parent.KEY_RIGHT || event.key == this.parent.KEY_ENTER || event.key == this.parent.KEY_TAB) {\n                    // We don't want to re-trigger the autocompletion when the user navigates the cursor inside the input.\n                    return;\n                }\n                this.loadSuggestions();\n            });\n            this.parent.textInput.addEventListener('focusout', () => {\n                // Using setTimeout here seems hacky on first sight but ensures proper order of events / handling.\n                // We first want to handle a click on a suggestion (when one is made) before hiding the suggestions on focusout of the input.\n                // Not doing so could mean the suggestion is hidden before the click is handled und thus resulting in not being selected.\n                // This depends on the order in which a browser handles different events and when it sets the active pseudo-selector on clicked events (Firefox for example)\n                setTimeout(() => {\n                    if (this.areSuggestionsActive()) {\n                        return;\n                    }\n                    this.hideSuggestions();\n                }, 0);\n            });\n            this.parent.textInput.addEventListener('focusin', () => {\n                if (this.options.showSuggestionsOnFocus) {\n                    this.loadSuggestions();\n                    this.showSuggestions();\n                }\n            });\n        }\n\n        loadSuggestions() {\n            let value = this.parent.getCurrentInput();\n\n            if (this.parent.options.selectMode == SelectModes.SINGLE) {\n                if (!this.parent.textInput.isContentEditable) {\n                    this.parent.select.clear(true);\n                    value = \"\";\n                }\n            } else if (value.length < this.parent.options.minCharactersForSuggestion) {\n                this.clearSuggestions();\n                this.hideSuggestions();\n                return;\n            }\n            if (this.parent.options.suggestionsUri.length > 0) {\n                this.requestSuggestions(value);\n                return;\n            }\n            if (Array.isArray(this.parent.options.initialSuggestions)) {\n                this.clearSuggestions();\n                this.parent.options.initialSuggestions.forEach(suggestion => {\n                    if (typeof suggestion !== 'object') {\n                        // The suggestion is of wrong type and therefore ignored.\n                        return;\n                    }\n                    let text = suggestion.fieldLabel;\n                    if (value.length == 0 && this.options.selectMode == SelectModes.SINGLE && !this.options.optional && !this.areSuggestionsDisplayed()) {\n                        this.addSuggestion(suggestion, false);\n                    } else if (value.localeCompare(text.slice(0, value.length), undefined, {sensitivity: 'base'}) === 0) {\n                        // The suggestion starts with the query text the user entered and will be displayed.\n                        this.addSuggestion(suggestion);\n                    }\n                });\n                if (this.suggestions.childNodes.length == 0) {\n                    if (this.parent.options.allowCustomEntries && this.parent.options.noMatchesCustomEntriesDescription) {\n                        this.addSuggestion({\n                            id: null,\n                            value: value,\n                            fieldLabel: value,\n                            type: '_no_match_',\n                            completionDescription: this.parent.options.noMatchesCustomEntriesDescription,\n                            completionLabel: null,\n                            disabled: true\n                        });\n\n                    } else if (this.parent.options.noMatchesText) {\n                        this.addSuggestion({\n                            id: null,\n                            value: '_no_match_',\n                            fieldLabel: this.parent.options.noMatchesText,\n                            type: '_no_match_',\n                            completionDescription: null,\n                            completionLabel: null,\n                            disabled: true\n                        });\n                    }\n                }\n            }\n        }\n\n        /**\n         * Hides the suggestions dropdown from the user.\n         */\n        hideSuggestions() {\n            // as the suggestions will be re-shown if a pending request is executed, we abort them if we want to hide\n            this.abortPendingRequest();\n            this.container.classList.remove('token-autocomplete-suggestions-displayed');\n            this.suggestions.style.display = '';\n\n            let _highlightedSuggestions = this.suggestions.querySelectorAll('li.token-autocomplete-suggestion-highlighted');\n            _highlightedSuggestions.forEach(_suggestion => {\n                _suggestion.classList.remove('token-autocomplete-suggestion-highlighted');\n            })\n        }\n\n        /**\n         * Shows the suggestions dropdown to the user.\n         */\n        showSuggestions() {\n            this.container.classList.add('token-autocomplete-suggestions-displayed');\n            this.suggestions.style.display = 'block';\n\n            const inputBottomPosition = this.parent.textInput.getBoundingClientRect().bottom;\n            const suggestionsHeight = this.suggestions.offsetHeight;\n            const viewportHeight = window.innerHeight;\n            const spaceBelow = viewportHeight - inputBottomPosition;\n            if (spaceBelow < suggestionsHeight) {\n                this.suggestions.classList.add('token-autocomplete-suggestions-above');\n            } else {\n                this.suggestions.classList.remove('token-autocomplete-suggestions-above');\n            }\n        }\n\n        areSuggestionsDisplayed() {\n            return this.suggestions.style.display === 'block';\n        }\n\n        highlightSuggestionAtPosition(index: number) {\n            let _suggestions = this.suggestions.querySelectorAll('li');\n            _suggestions.forEach(_suggestion => {\n                _suggestion.classList.remove('token-autocomplete-suggestion-highlighted');\n            })\n            _suggestions[index].classList.add('token-autocomplete-suggestion-highlighted');\n        }\n\n        highlightSuggestion(_suggestion: Element) {\n            this.suggestions.querySelectorAll('li.token-autocomplete-suggestion-highlighted').forEach(_highlightedSuggestion => {\n                _highlightedSuggestion.classList.remove('token-autocomplete-suggestion-highlighted');\n            })\n            _suggestion.classList.add('token-autocomplete-suggestion-highlighted');\n        }\n\n        /**\n         * Checks for the presence of a suggestion that is currently clicked via mouse (active).\n         */\n        areSuggestionsActive() {\n            return !!this.suggestions.querySelector('li:active');\n        }\n\n        /**\n         * Removes all previous suggestions from the dropdown.\n         */\n        clearSuggestions() {\n            this.abortPendingRequest();\n            this.suggestions.innerHTML = '';\n        }\n\n        /**\n         * Aborts currently in progress or scheduled suggestions requests.\n         */\n        abortPendingRequest() {\n            this.request?.abort();\n            clearTimeout(this.timeout);\n        }\n\n        /**\n         * Loads suggestions matching the given query from the rest service behind the URI given as an option while initializing the field.\n         *\n         * @param query the query to search suggestions for\n         */\n        requestSuggestions(query: string) {\n            let me = this;\n            clearTimeout(me.timeout);\n            if (!me.timeout) {\n                me.debouncedRequestSuggestions.call(me, query);\n                me.timeout = window.setTimeout(() => {\n                    delete me.timeout;\n                }, me.parent.options.requestDelay);\n            } else {\n                me.timeout = window.setTimeout(() => {\n                    delete me.timeout;\n                    me.debouncedRequestSuggestions.call(me, query);\n                }, me.parent.options.requestDelay);\n            }\n        }\n\n        dispatchSuggestionSelectedEvent(_suggestion: HTMLElement) {\n            _suggestion.dispatchEvent(new CustomEvent('suggestion-selected', {\n                detail: {\n                    value: _suggestion.dataset.value,\n                    text: _suggestion.dataset.text,\n                    type: _suggestion.dataset.type || null\n                }\n            }));\n        }\n\n        debouncedRequestSuggestions(query: string) {\n            if (this.request != null && this.request.readyState) {\n                this.request.abort();\n            }\n\n            const request = new XMLHttpRequest();\n            this.request = request;\n            this.request.onload = () => {\n                this.request = null;\n\n                this.clearSuggestions();\n\n                let answer = request.response;\n                // IE 11 doesn't properly respect content type header, need to parse json string by hand.\n                if (typeof answer === 'string') {\n                    answer = JSON.parse(answer);\n                }\n\n                if (Array.isArray(answer.completions)) {\n                    if (this.parent.val().length == 0 && answer.completions.length > 0 && this.options.selectMode == SelectModes.SINGLE && !this.options.optional && !this.areSuggestionsDisplayed()) {\n                        answer.completions.forEach((suggestion: Suggestion) => this.addSuggestion(suggestion, false));\n                        let firstSuggestion = answer.completions[0] as Suggestion;\n                        let value = firstSuggestion.id || firstSuggestion.value;\n                        this.parent.select.addToken(value, firstSuggestion.fieldLabel, firstSuggestion.type, true);\n                        return;\n                    }\n                    answer.completions.forEach((suggestion: Suggestion) => this.addSuggestion(suggestion));\n                    if (this.suggestions.childNodes.length == 0) {\n                        if (this.parent.options.allowCustomEntries && this.parent.options.noMatchesCustomEntriesDescription) {\n                            this.addSuggestion({\n                                id: null,\n                                value: query,\n                                fieldLabel: query,\n                                type: '_no_match_',\n                                completionDescription: this.parent.options.noMatchesCustomEntriesDescription,\n                                completionLabel: null,\n                                disabled: true\n                            });\n\n                        } else if (this.parent.options.noMatchesText) {\n                            this.addSuggestion({\n                                id: null,\n                                value: '_no_match_',\n                                fieldLabel: this.parent.options.noMatchesText,\n                                type: '_no_match_',\n                                completionDescription: null,\n                                completionLabel: null,\n                                disabled: true\n                            });\n                        }\n                    }\n                }\n            };\n            let suggestionsUri = this.options.suggestionsUriBuilder(query);\n            this.request.open('GET', suggestionsUri, true);\n            this.request.responseType = 'json';\n            this.request.setRequestHeader('Content-type', 'application/json');\n            this.request.send();\n        }\n\n        /**\n         * Adds a suggestion with the given text matching the users input to the dropdown.\n         *\n         * @param {string} suggestion - the metadata of the suggestion that should be added\n         * @param showSuggestions - if the suggestions box should be shown, default true\n         */\n        addSuggestion(suggestion: Suggestion, showSuggestions = true) {\n            let element = this.renderer(suggestion);\n\n            let value = suggestion.id || suggestion.value;\n            let text = suggestion.completionLabel || suggestion.fieldLabel;\n\n            element.dataset.value = value;\n            element.dataset.text = text;\n            element.dataset.tokenText = suggestion.fieldLabel;\n            if (suggestion.type != null) {\n                element.dataset.type = suggestion.type;\n            }\n            if (suggestion.disabled) {\n                element.dataset.disabled = 'true';\n            }\n\n            let me = this;\n            element.addEventListener('click', (_event: Event) => {\n                if (value == '_no_match_' || suggestion.disabled) {\n                    return;\n                }\n                if (me.parent.options.selectMode == SelectModes.SINGLE) {\n                    if (element.classList.contains('token-autocomplete-suggestion-active')) {\n                        me.parent.select.clear(false);\n                    } else {\n                        if (element.dataset.becomesToken !== 'false') {\n                            me.parent.select.addToken(value, suggestion.fieldLabel, suggestion.type, false);\n                        }\n                        me.dispatchSuggestionSelectedEvent(element);\n                    }\n                } else {\n                    me.parent.select.clearCurrentInput();\n                    if (element.classList.contains('token-autocomplete-suggestion-active')) {\n                        let multiSelect = me.parent.select as MultiSelect;\n                        multiSelect.removeTokenWithText(suggestion.fieldLabel);\n                    } else {\n                        if (element.dataset.becomesToken !== 'false') {\n                            me.parent.select.addToken(value, suggestion.fieldLabel, suggestion.type, false);\n                        }\n                        me.dispatchSuggestionSelectedEvent(element);\n                    }\n                }\n                me.clearSuggestions();\n                me.hideSuggestions();\n            });\n\n            if (suggestion.disabled) {\n                element.classList.add('token-autocomplete-suggestion-disabled');\n            }\n\n            if (this.parent.tokenContainer.querySelector('.token-autocomplete-token[data-value=\"' + value + '\"]') !== null) {\n                element.classList.add('token-autocomplete-suggestion-active');\n            }\n\n            this.suggestions.appendChild(element);\n            if (showSuggestions) {\n                this.showSuggestions();\n            }\n\n            me.parent.log('added suggestion', suggestion);\n        }\n\n        static defaultRenderer: SuggestionRenderer = function (suggestion: Suggestion): HTMLElement {\n            let option = document.createElement('li');\n            option.textContent = suggestion.completionLabel || suggestion.fieldLabel;\n\n            if (suggestion.completionDescription) {\n                let description = document.createElement('small');\n                description.textContent = suggestion.completionDescription;\n                description.classList.add('token-autocomplete-suggestion-description');\n                option.appendChild(description);\n            }\n\n            return option;\n        }\n    }\n\n    static escapeQuotes(text: string | null | undefined): string {\n        return text?.replace(/\\x22/g, '\\\\\\x22') ?? '';\n    }\n\n    static shouldIgnoreSuggestion(suggestion: Node) {\n        if (suggestion instanceof HTMLElement) {\n            return suggestion.dataset.disabled === 'true';\n        }\n        return true;\n    }\n}\n"]}